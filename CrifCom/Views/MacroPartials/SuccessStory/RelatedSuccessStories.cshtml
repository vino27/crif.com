@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using RJP.MultiUrlPicker.Models;
    @{
        var currentPage = Model.Content;
        int count = 4;
        if (currentPage.HasValue("numberOfSuccessItems"))
        {
            count = currentPage.GetPropertyValue<int>("numberOfSuccessItems");
        }
        var parentPage = currentPage.Parent;
        var marketNeeds = currentPage.HasValue("marketNeeds") ? currentPage.GetPropertyValue<string>("marketNeeds").Split(new string[] { "," },
                                StringSplitOptions.RemoveEmptyEntries).ToList() : null;
        var childPages = parentPage.Descendants("successStorySinglePage").Where(x => x.IsVisible() && x.TemplateId > 0 && x.HasValue("marketNeeds") && marketNeeds!=null && x.GetPropertyValue<string>("marketNeeds").Split(new string[] { "," },
                                     StringSplitOptions.RemoveEmptyEntries).ToList().Intersect(marketNeeds).Count() > 0
                                      && x.Id != Model.Content.Id).OrderByDescending(x => x.GetPropertyValue("publicationDate")).Take(count);

        if (childPages != null && childPages.Any())
        {
            <div class="col-sm-12 single-listing border-top-gray">
                <div class="row">
                    <div class="header">
                        @if (currentPage.HasValue("successStoryListTitle"))
                        {
                        <a href="@parentPage.Url"><h3>@currentPage.GetPropertyValue("successStoryListTitle")</h3></a>
                        }
                        else
                        {
                        <a href="@parentPage.Url"><h3>@parentPage.Name</h3></a>
                        }

                        @if (parentPage.HasValue("internalLinks"))
                        {
                            var link = parentPage.GetPropertyValue<MultiUrls>("internalLinks");
                            if (link != null && link.Any())
                            {
                                foreach (var linkUrl in link)
                                {
                        <a href="@linkUrl.Url" target="@linkUrl.Target" class="standard-link">@linkUrl.Name</a>
                                }
                            }

                        }
                        @if (parentPage.HasValue("externalLinks"))
                        {
                            var links = parentPage.GetPropertyValue<MultiUrls>("externalLinks");
                            if (links != null && links.Any())
                            {
                       
                                foreach (var urlLinks in links)
                                {
                        <a href="@urlLinks.Url" target="@urlLinks.Target" class="standard-link">@urlLinks.Name</a><br />
                                }
                            }
                        }
                    </div>
                    <ul class="list-unstyled listing-type-one">
                        @foreach (var children in childPages)
                {
                        <li>
                            @if (children.HasValue("thumbnailImage"))
                                {
                                    var image = Umbraco.TypedMedia(children.GetPropertyValue<string>("thumbnailImage"));
                                    if (image != null)
                                    {
                                <div class="image-holder">
                                    <a href="@children.Url"><img src="@image.Url" alt="@image.Name"></a>
                                </div>
                                    }

                                }

                            <div class="article-type-one">
                                @if (children.HasValue("actualDate"))
                                    {
                                    <span class="date">@children.GetPropertyValue("actualDate")</span>
                                    }

                                <a href="@children.Url">
                                    @if (children.HasValue("title"))
                                        {
                                        <p class="highlight-text">@children.GetPropertyValue("title")</p>
                                        }
                                        else
                                        {
                                        <p class="highlight-text">@children.Name</p>
                                        }

                                </a>
                                @if (children.HasValue("shortDescripion"))
                                    {
                                    <p>@Html.Raw(children.GetPropertyValue("shortDescripion"))</p>
                                    }
                            </div>
                        </li>
                        }
                    </ul>
                </div>

            </div>
        }
    }
